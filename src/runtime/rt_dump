
full_runtime.o:	file format Mach-O 64-bit x86-64

Disassembly of section __TEXT,__text:
_alloc_node:
       0:	55 	pushq	%rbp
       1:	48 89 e5 	movq	%rsp, %rbp
       4:	48 83 ec 10 	subq	$16, %rsp
       8:	b8 18 00 00 00 	movl	$24, %eax
       d:	89 c7 	movl	%eax, %edi
       f:	e8 00 00 00 00 	callq	0 <_alloc_node+0x14>
      14:	48 89 45 f8 	movq	%rax, -8(%rbp)
      18:	48 83 7d f8 00 	cmpq	$0, -8(%rbp)
      1d:	0f 95 c1 	setne	%cl
      20:	80 f1 ff 	xorb	$-1, %cl
      23:	80 e1 01 	andb	$1, %cl
      26:	0f b6 d1 	movzbl	%cl, %edx
      29:	48 63 c2 	movslq	%edx, %rax
      2c:	48 83 f8 00 	cmpq	$0, %rax
      30:	0f 84 1f 00 00 00 	je	31 <_alloc_node+0x55>
      36:	48 8d 3d 1a 0b 00 00 	leaq	2842(%rip), %rdi
      3d:	48 8d 35 1e 0b 00 00 	leaq	2846(%rip), %rsi
      44:	48 8d 0d 26 0b 00 00 	leaq	2854(%rip), %rcx
      4b:	ba 0a 00 00 00 	movl	$10, %edx
      50:	e8 00 00 00 00 	callq	0 <_alloc_node+0x55>
      55:	e9 00 00 00 00 	jmp	0 <_alloc_node+0x5a>
      5a:	48 8b 45 f8 	movq	-8(%rbp), %rax
      5e:	48 83 c4 10 	addq	$16, %rsp
      62:	5d 	popq	%rbp
      63:	c3 	retq
      64:	66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
      6e:	66 90 	nop

_alloc_app:
      70:	55 	pushq	%rbp
      71:	48 89 e5 	movq	%rsp, %rbp
      74:	48 83 ec 20 	subq	$32, %rsp
      78:	48 89 7d f8 	movq	%rdi, -8(%rbp)
      7c:	48 89 75 f0 	movq	%rsi, -16(%rbp)
      80:	e8 00 00 00 00 	callq	0 <_alloc_app+0x15>
      85:	48 89 45 e8 	movq	%rax, -24(%rbp)
      89:	48 8b 45 e8 	movq	-24(%rbp), %rax
      8d:	c7 00 00 00 00 00 	movl	$0, (%rax)
      93:	48 8b 45 f8 	movq	-8(%rbp), %rax
      97:	48 8b 75 e8 	movq	-24(%rbp), %rsi
      9b:	48 89 46 08 	movq	%rax, 8(%rsi)
      9f:	48 8b 45 f0 	movq	-16(%rbp), %rax
      a3:	48 8b 75 e8 	movq	-24(%rbp), %rsi
      a7:	48 89 46 10 	movq	%rax, 16(%rsi)
      ab:	48 8b 45 e8 	movq	-24(%rbp), %rax
      af:	48 83 c4 20 	addq	$32, %rsp
      b3:	5d 	popq	%rbp
      b4:	c3 	retq
      b5:	66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
      bf:	90 	nop

_alloc_num:
      c0:	55 	pushq	%rbp
      c1:	48 89 e5 	movq	%rsp, %rbp
      c4:	48 83 ec 10 	subq	$16, %rsp
      c8:	89 7d fc 	movl	%edi, -4(%rbp)
      cb:	e8 00 00 00 00 	callq	0 <_alloc_num+0x10>
      d0:	48 89 45 f0 	movq	%rax, -16(%rbp)
      d4:	48 8b 45 f0 	movq	-16(%rbp), %rax
      d8:	c7 00 01 00 00 00 	movl	$1, (%rax)
      de:	8b 7d fc 	movl	-4(%rbp), %edi
      e1:	48 8b 45 f0 	movq	-16(%rbp), %rax
      e5:	89 78 04 	movl	%edi, 4(%rax)
      e8:	48 8b 45 f0 	movq	-16(%rbp), %rax
      ec:	48 83 c4 10 	addq	$16, %rsp
      f0:	5d 	popq	%rbp
      f1:	c3 	retq
      f2:	66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
      fc:	0f 1f 40 00 	nopl	(%rax)

_alloc_global:
     100:	55 	pushq	%rbp
     101:	48 89 e5 	movq	%rsp, %rbp
     104:	48 83 ec 20 	subq	$32, %rsp
     108:	48 89 7d f8 	movq	%rdi, -8(%rbp)
     10c:	89 75 f4 	movl	%esi, -12(%rbp)
     10f:	e8 00 00 00 00 	callq	0 <_alloc_global+0x14>
     114:	48 89 45 e8 	movq	%rax, -24(%rbp)
     118:	48 8b 45 e8 	movq	-24(%rbp), %rax
     11c:	c7 00 02 00 00 00 	movl	$2, (%rax)
     122:	8b 75 f4 	movl	-12(%rbp), %esi
     125:	48 8b 45 e8 	movq	-24(%rbp), %rax
     129:	89 70 04 	movl	%esi, 4(%rax)
     12c:	48 8b 45 f8 	movq	-8(%rbp), %rax
     130:	48 8b 7d e8 	movq	-24(%rbp), %rdi
     134:	48 89 47 08 	movq	%rax, 8(%rdi)
     138:	48 8b 45 e8 	movq	-24(%rbp), %rax
     13c:	48 83 c4 20 	addq	$32, %rsp
     140:	5d 	popq	%rbp
     141:	c3 	retq
     142:	66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
     14c:	0f 1f 40 00 	nopl	(%rax)

_alloc_ind:
     150:	55 	pushq	%rbp
     151:	48 89 e5 	movq	%rsp, %rbp
     154:	48 83 ec 10 	subq	$16, %rsp
     158:	48 89 7d f8 	movq	%rdi, -8(%rbp)
     15c:	e8 00 00 00 00 	callq	0 <_alloc_ind+0x11>
     161:	48 89 45 f0 	movq	%rax, -16(%rbp)
     165:	48 8b 45 f0 	movq	-16(%rbp), %rax
     169:	c7 00 03 00 00 00 	movl	$3, (%rax)
     16f:	48 8b 45 f8 	movq	-8(%rbp), %rax
     173:	48 8b 7d f0 	movq	-16(%rbp), %rdi
     177:	48 89 47 08 	movq	%rax, 8(%rdi)
     17b:	48 8b 45 f0 	movq	-16(%rbp), %rax
     17f:	48 83 c4 10 	addq	$16, %rsp
     183:	5d 	popq	%rbp
     184:	c3 	retq
     185:	66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
     18f:	90 	nop

_stack_init:
     190:	55 	pushq	%rbp
     191:	48 89 e5 	movq	%rsp, %rbp
     194:	48 83 ec 10 	subq	$16, %rsp
     198:	48 89 7d f8 	movq	%rdi, -8(%rbp)
     19c:	48 8b 7d f8 	movq	-8(%rbp), %rdi
     1a0:	48 c7 07 04 00 00 00 	movq	$4, (%rdi)
     1a7:	48 8b 7d f8 	movq	-8(%rbp), %rdi
     1ab:	48 c7 47 08 00 00 00 00 	movq	$0, 8(%rdi)
     1b3:	48 8b 7d f8 	movq	-8(%rbp), %rdi
     1b7:	48 8b 3f 	movq	(%rdi), %rdi
     1ba:	48 c1 e7 03 	shlq	$3, %rdi
     1be:	e8 00 00 00 00 	callq	0 <_stack_init+0x33>
     1c3:	48 8b 7d f8 	movq	-8(%rbp), %rdi
     1c7:	48 89 47 10 	movq	%rax, 16(%rdi)
     1cb:	48 8b 45 f8 	movq	-8(%rbp), %rax
     1cf:	48 83 78 10 00 	cmpq	$0, 16(%rax)
     1d4:	0f 95 c1 	setne	%cl
     1d7:	80 f1 ff 	xorb	$-1, %cl
     1da:	80 e1 01 	andb	$1, %cl
     1dd:	0f b6 d1 	movzbl	%cl, %edx
     1e0:	48 63 c2 	movslq	%edx, %rax
     1e3:	48 83 f8 00 	cmpq	$0, %rax
     1e7:	0f 84 1f 00 00 00 	je	31 <_stack_init+0x7c>
     1ed:	48 8d 3d 8e 09 00 00 	leaq	2446(%rip), %rdi
     1f4:	48 8d 35 67 09 00 00 	leaq	2407(%rip), %rsi
     1fb:	48 8d 0d 8b 09 00 00 	leaq	2443(%rip), %rcx
     202:	ba 31 00 00 00 	movl	$49, %edx
     207:	e8 00 00 00 00 	callq	0 <_stack_init+0x7c>
     20c:	e9 00 00 00 00 	jmp	0 <_stack_init+0x81>
     211:	48 83 c4 10 	addq	$16, %rsp
     215:	5d 	popq	%rbp
     216:	c3 	retq
     217:	66 0f 1f 84 00 00 00 00 00 	nopw	(%rax,%rax)

_stack_free:
     220:	55 	pushq	%rbp
     221:	48 89 e5 	movq	%rsp, %rbp
     224:	48 83 ec 10 	subq	$16, %rsp
     228:	48 89 7d f8 	movq	%rdi, -8(%rbp)
     22c:	48 8b 7d f8 	movq	-8(%rbp), %rdi
     230:	48 8b 7f 10 	movq	16(%rdi), %rdi
     234:	e8 00 00 00 00 	callq	0 <_stack_free+0x19>
     239:	48 83 c4 10 	addq	$16, %rsp
     23d:	5d 	popq	%rbp
     23e:	c3 	retq
     23f:	90 	nop

_stack_push:
     240:	55 	pushq	%rbp
     241:	48 89 e5 	movq	%rsp, %rbp
     244:	48 83 ec 10 	subq	$16, %rsp
     248:	48 89 7d f8 	movq	%rdi, -8(%rbp)
     24c:	48 89 75 f0 	movq	%rsi, -16(%rbp)
     250:	48 8b 45 f8 	movq	-8(%rbp), %rax
     254:	48 8b 40 08 	movq	8(%rax), %rax
     258:	48 8b 4d f8 	movq	-8(%rbp), %rcx
     25c:	48 3b 01 	cmpq	(%rcx), %rax
     25f:	0f 82 7c 00 00 00 	jb	124 <_stack_push+0xa1>
     265:	48 8b 45 f8 	movq	-8(%rbp), %rax
     269:	48 8b 40 10 	movq	16(%rax), %rax
     26d:	48 8b 4d f8 	movq	-8(%rbp), %rcx
     271:	48 8b 11 	movq	(%rcx), %rdx
     274:	48 c1 e2 01 	shlq	$1, %rdx
     278:	48 89 11 	movq	%rdx, (%rcx)
     27b:	48 c1 e2 03 	shlq	$3, %rdx
     27f:	48 89 c7 	movq	%rax, %rdi
     282:	48 89 d6 	movq	%rdx, %rsi
     285:	e8 00 00 00 00 	callq	0 <_stack_push+0x4a>
     28a:	48 8b 4d f8 	movq	-8(%rbp), %rcx
     28e:	48 89 41 10 	movq	%rax, 16(%rcx)
     292:	48 8b 45 f8 	movq	-8(%rbp), %rax
     296:	48 83 78 10 00 	cmpq	$0, 16(%rax)
     29b:	41 0f 95 c0 	setne	%r8b
     29f:	41 80 f0 ff 	xorb	$-1, %r8b
     2a3:	41 80 e0 01 	andb	$1, %r8b
     2a7:	45 0f b6 c8 	movzbl	%r8b, %r9d
     2ab:	49 63 c1 	movslq	%r9d, %rax
     2ae:	48 83 f8 00 	cmpq	$0, %rax
     2b2:	0f 84 1f 00 00 00 	je	31 <_stack_push+0x97>
     2b8:	48 8d 3d de 08 00 00 	leaq	2270(%rip), %rdi
     2bf:	48 8d 35 9c 08 00 00 	leaq	2204(%rip), %rsi
     2c6:	48 8d 0d c0 08 00 00 	leaq	2240(%rip), %rcx
     2cd:	ba 3b 00 00 00 	movl	$59, %edx
     2d2:	e8 00 00 00 00 	callq	0 <_stack_push+0x97>
     2d7:	e9 00 00 00 00 	jmp	0 <_stack_push+0x9c>
     2dc:	e9 6f ff ff ff 	jmp	-145 <_stack_push+0x10>
     2e1:	48 8b 45 f0 	movq	-16(%rbp), %rax
     2e5:	48 8b 4d f8 	movq	-8(%rbp), %rcx
     2e9:	48 8b 49 10 	movq	16(%rcx), %rcx
     2ed:	48 8b 55 f8 	movq	-8(%rbp), %rdx
     2f1:	48 8b 72 08 	movq	8(%rdx), %rsi
     2f5:	48 89 f7 	movq	%rsi, %rdi
     2f8:	48 83 c7 01 	addq	$1, %rdi
     2fc:	48 89 7a 08 	movq	%rdi, 8(%rdx)
     300:	48 89 04 f1 	movq	%rax, (%rcx,%rsi,8)
     304:	48 83 c4 10 	addq	$16, %rsp
     308:	5d 	popq	%rbp
     309:	c3 	retq
     30a:	66 0f 1f 44 00 00 	nopw	(%rax,%rax)

_stack_pop:
     310:	55 	pushq	%rbp
     311:	48 89 e5 	movq	%rsp, %rbp
     314:	48 83 ec 10 	subq	$16, %rsp
     318:	48 89 7d f8 	movq	%rdi, -8(%rbp)
     31c:	48 8b 7d f8 	movq	-8(%rbp), %rdi
     320:	48 83 7f 08 00 	cmpq	$0, 8(%rdi)
     325:	0f 97 c0 	seta	%al
     328:	34 ff 	xorb	$-1, %al
     32a:	24 01 	andb	$1, %al
     32c:	0f b6 c8 	movzbl	%al, %ecx
     32f:	48 63 f9 	movslq	%ecx, %rdi
     332:	48 83 ff 00 	cmpq	$0, %rdi
     336:	0f 84 1f 00 00 00 	je	31 <_stack_pop+0x4b>
     33c:	48 8d 3d 65 08 00 00 	leaq	2149(%rip), %rdi
     343:	48 8d 35 18 08 00 00 	leaq	2072(%rip), %rsi
     34a:	48 8d 0d 61 08 00 00 	leaq	2145(%rip), %rcx
     351:	ba 41 00 00 00 	movl	$65, %edx
     356:	e8 00 00 00 00 	callq	0 <_stack_pop+0x4b>
     35b:	e9 00 00 00 00 	jmp	0 <_stack_pop+0x50>
     360:	48 8b 45 f8 	movq	-8(%rbp), %rax
     364:	48 8b 40 10 	movq	16(%rax), %rax
     368:	48 8b 4d f8 	movq	-8(%rbp), %rcx
     36c:	48 8b 51 08 	movq	8(%rcx), %rdx
     370:	48 89 d6 	movq	%rdx, %rsi
     373:	48 83 c6 ff 	addq	$-1, %rsi
     377:	48 89 71 08 	movq	%rsi, 8(%rcx)
     37b:	48 8b 44 d0 f8 	movq	-8(%rax,%rdx,8), %rax
     380:	48 83 c4 10 	addq	$16, %rsp
     384:	5d 	popq	%rbp
     385:	c3 	retq
     386:	66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)

_stack_peek:
     390:	55 	pushq	%rbp
     391:	48 89 e5 	movq	%rsp, %rbp
     394:	48 83 ec 10 	subq	$16, %rsp
     398:	48 89 7d f8 	movq	%rdi, -8(%rbp)
     39c:	48 89 75 f0 	movq	%rsi, -16(%rbp)
     3a0:	48 8b 75 f8 	movq	-8(%rbp), %rsi
     3a4:	48 8b 76 08 	movq	8(%rsi), %rsi
     3a8:	48 3b 75 f0 	cmpq	-16(%rbp), %rsi
     3ac:	0f 97 c0 	seta	%al
     3af:	34 ff 	xorb	$-1, %al
     3b1:	24 01 	andb	$1, %al
     3b3:	0f b6 c8 	movzbl	%al, %ecx
     3b6:	48 63 f1 	movslq	%ecx, %rsi
     3b9:	48 83 fe 00 	cmpq	$0, %rsi
     3bd:	0f 84 1f 00 00 00 	je	31 <_stack_peek+0x52>
     3c3:	48 8d 3d f5 07 00 00 	leaq	2037(%rip), %rdi
     3ca:	48 8d 35 91 07 00 00 	leaq	1937(%rip), %rsi
     3d1:	48 8d 0d f2 07 00 00 	leaq	2034(%rip), %rcx
     3d8:	ba 46 00 00 00 	movl	$70, %edx
     3dd:	e8 00 00 00 00 	callq	0 <_stack_peek+0x52>
     3e2:	e9 00 00 00 00 	jmp	0 <_stack_peek+0x57>
     3e7:	48 8b 45 f8 	movq	-8(%rbp), %rax
     3eb:	48 8b 40 10 	movq	16(%rax), %rax
     3ef:	48 8b 4d f8 	movq	-8(%rbp), %rcx
     3f3:	48 8b 49 08 	movq	8(%rcx), %rcx
     3f7:	48 2b 4d f0 	subq	-16(%rbp), %rcx
     3fb:	48 83 e9 01 	subq	$1, %rcx
     3ff:	48 8b 04 c8 	movq	(%rax,%rcx,8), %rax
     403:	48 83 c4 10 	addq	$16, %rsp
     407:	5d 	popq	%rbp
     408:	c3 	retq
     409:	0f 1f 80 00 00 00 00 	nopl	(%rax)

_stack_popn:
     410:	55 	pushq	%rbp
     411:	48 89 e5 	movq	%rsp, %rbp
     414:	48 83 ec 10 	subq	$16, %rsp
     418:	48 89 7d f8 	movq	%rdi, -8(%rbp)
     41c:	48 89 75 f0 	movq	%rsi, -16(%rbp)
     420:	48 8b 75 f8 	movq	-8(%rbp), %rsi
     424:	48 8b 76 08 	movq	8(%rsi), %rsi
     428:	48 3b 75 f0 	cmpq	-16(%rbp), %rsi
     42c:	0f 93 c0 	setae	%al
     42f:	34 ff 	xorb	$-1, %al
     431:	24 01 	andb	$1, %al
     433:	0f b6 c8 	movzbl	%al, %ecx
     436:	48 63 f1 	movslq	%ecx, %rsi
     439:	48 83 fe 00 	cmpq	$0, %rsi
     43d:	0f 84 1f 00 00 00 	je	31 <_stack_popn+0x52>
     443:	48 8d 3d 8d 07 00 00 	leaq	1933(%rip), %rdi
     44a:	48 8d 35 11 07 00 00 	leaq	1809(%rip), %rsi
     451:	48 8d 0d 8a 07 00 00 	leaq	1930(%rip), %rcx
     458:	ba 4b 00 00 00 	movl	$75, %edx
     45d:	e8 00 00 00 00 	callq	0 <_stack_popn+0x52>
     462:	e9 00 00 00 00 	jmp	0 <_stack_popn+0x57>
     467:	48 8b 45 f0 	movq	-16(%rbp), %rax
     46b:	48 8b 4d f8 	movq	-8(%rbp), %rcx
     46f:	48 8b 51 08 	movq	8(%rcx), %rdx
     473:	48 29 c2 	subq	%rax, %rdx
     476:	48 89 51 08 	movq	%rdx, 8(%rcx)
     47a:	48 83 c4 10 	addq	$16, %rsp
     47e:	5d 	popq	%rbp
     47f:	c3 	retq

_stack_slide:
     480:	55 	pushq	%rbp
     481:	48 89 e5 	movq	%rsp, %rbp
     484:	48 83 ec 10 	subq	$16, %rsp
     488:	48 89 7d f8 	movq	%rdi, -8(%rbp)
     48c:	48 89 75 f0 	movq	%rsi, -16(%rbp)
     490:	48 8b 75 f8 	movq	-8(%rbp), %rsi
     494:	48 8b 76 08 	movq	8(%rsi), %rsi
     498:	48 3b 75 f0 	cmpq	-16(%rbp), %rsi
     49c:	0f 97 c0 	seta	%al
     49f:	34 ff 	xorb	$-1, %al
     4a1:	24 01 	andb	$1, %al
     4a3:	0f b6 c8 	movzbl	%al, %ecx
     4a6:	48 63 f1 	movslq	%ecx, %rsi
     4a9:	48 83 fe 00 	cmpq	$0, %rsi
     4ad:	0f 84 1f 00 00 00 	je	31 <_stack_slide+0x52>
     4b3:	48 8d 3d 36 07 00 00 	leaq	1846(%rip), %rdi
     4ba:	48 8d 35 a1 06 00 00 	leaq	1697(%rip), %rsi
     4c1:	48 8d 0d 34 07 00 00 	leaq	1844(%rip), %rcx
     4c8:	ba 50 00 00 00 	movl	$80, %edx
     4cd:	e8 00 00 00 00 	callq	0 <_stack_slide+0x52>
     4d2:	e9 00 00 00 00 	jmp	0 <_stack_slide+0x57>
     4d7:	48 8b 45 f8 	movq	-8(%rbp), %rax
     4db:	48 8b 40 10 	movq	16(%rax), %rax
     4df:	48 8b 4d f8 	movq	-8(%rbp), %rcx
     4e3:	48 8b 49 08 	movq	8(%rcx), %rcx
     4e7:	48 83 e9 01 	subq	$1, %rcx
     4eb:	48 8b 04 c8 	movq	(%rax,%rcx,8), %rax
     4ef:	48 8b 4d f8 	movq	-8(%rbp), %rcx
     4f3:	48 8b 49 10 	movq	16(%rcx), %rcx
     4f7:	48 8b 55 f8 	movq	-8(%rbp), %rdx
     4fb:	48 8b 52 08 	movq	8(%rdx), %rdx
     4ff:	48 2b 55 f0 	subq	-16(%rbp), %rdx
     503:	48 83 ea 01 	subq	$1, %rdx
     507:	48 89 04 d1 	movq	%rax, (%rcx,%rdx,8)
     50b:	48 8b 45 f0 	movq	-16(%rbp), %rax
     50f:	48 8b 4d f8 	movq	-8(%rbp), %rcx
     513:	48 8b 51 08 	movq	8(%rcx), %rdx
     517:	48 29 c2 	subq	%rax, %rdx
     51a:	48 89 51 08 	movq	%rdx, 8(%rcx)
     51e:	48 83 c4 10 	addq	$16, %rsp
     522:	5d 	popq	%rbp
     523:	c3 	retq
     524:	66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
     52e:	66 90 	nop

_stack_update:
     530:	55 	pushq	%rbp
     531:	48 89 e5 	movq	%rsp, %rbp
     534:	48 83 ec 20 	subq	$32, %rsp
     538:	48 89 7d f8 	movq	%rdi, -8(%rbp)
     53c:	48 89 75 f0 	movq	%rsi, -16(%rbp)
     540:	48 8b 75 f8 	movq	-8(%rbp), %rsi
     544:	48 8b 76 08 	movq	8(%rsi), %rsi
     548:	48 8b 7d f0 	movq	-16(%rbp), %rdi
     54c:	48 83 c7 01 	addq	$1, %rdi
     550:	48 39 fe 	cmpq	%rdi, %rsi
     553:	0f 97 c0 	seta	%al
     556:	34 ff 	xorb	$-1, %al
     558:	24 01 	andb	$1, %al
     55a:	0f b6 c8 	movzbl	%al, %ecx
     55d:	48 63 f1 	movslq	%ecx, %rsi
     560:	48 83 fe 00 	cmpq	$0, %rsi
     564:	0f 84 1f 00 00 00 	je	31 <_stack_update+0x59>
     56a:	48 8d 3d 98 06 00 00 	leaq	1688(%rip), %rdi
     571:	48 8d 35 ea 05 00 00 	leaq	1514(%rip), %rsi
     578:	48 8d 0d 97 06 00 00 	leaq	1687(%rip), %rcx
     57f:	ba 56 00 00 00 	movl	$86, %edx
     584:	e8 00 00 00 00 	callq	0 <_stack_update+0x59>
     589:	e9 00 00 00 00 	jmp	0 <_stack_update+0x5e>
     58e:	48 8b 45 f8 	movq	-8(%rbp), %rax
     592:	48 8b 40 10 	movq	16(%rax), %rax
     596:	48 8b 4d f8 	movq	-8(%rbp), %rcx
     59a:	48 8b 49 08 	movq	8(%rcx), %rcx
     59e:	48 2b 4d f0 	subq	-16(%rbp), %rcx
     5a2:	48 83 e9 02 	subq	$2, %rcx
     5a6:	48 8b 04 c8 	movq	(%rax,%rcx,8), %rax
     5aa:	48 89 45 e8 	movq	%rax, -24(%rbp)
     5ae:	48 8b 45 e8 	movq	-24(%rbp), %rax
     5b2:	c7 00 03 00 00 00 	movl	$3, (%rax)
     5b8:	48 8b 45 f8 	movq	-8(%rbp), %rax
     5bc:	48 8b 40 10 	movq	16(%rax), %rax
     5c0:	48 8b 4d f8 	movq	-8(%rbp), %rcx
     5c4:	48 8b 51 08 	movq	8(%rcx), %rdx
     5c8:	48 83 ea 01 	subq	$1, %rdx
     5cc:	48 89 51 08 	movq	%rdx, 8(%rcx)
     5d0:	48 8b 04 d0 	movq	(%rax,%rdx,8), %rax
     5d4:	48 8b 4d e8 	movq	-24(%rbp), %rcx
     5d8:	48 89 41 08 	movq	%rax, 8(%rcx)
     5dc:	48 83 c4 20 	addq	$32, %rsp
     5e0:	5d 	popq	%rbp
     5e1:	c3 	retq
     5e2:	66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
     5ec:	0f 1f 40 00 	nopl	(%rax)

_stack_alloc:
     5f0:	55 	pushq	%rbp
     5f1:	48 89 e5 	movq	%rsp, %rbp
     5f4:	48 83 ec 20 	subq	$32, %rsp
     5f8:	48 89 7d f8 	movq	%rdi, -8(%rbp)
     5fc:	48 89 75 f0 	movq	%rsi, -16(%rbp)
     600:	48 8b 45 f0 	movq	-16(%rbp), %rax
     604:	48 89 c1 	movq	%rax, %rcx
     607:	48 83 c1 ff 	addq	$-1, %rcx
     60b:	48 89 4d f0 	movq	%rcx, -16(%rbp)
     60f:	48 83 f8 00 	cmpq	$0, %rax
     613:	0f 84 22 00 00 00 	je	34 <_stack_alloc+0x4b>
     619:	31 c0 	xorl	%eax, %eax
     61b:	89 c7 	movl	%eax, %edi
     61d:	48 8b 4d f8 	movq	-8(%rbp), %rcx
     621:	48 89 4d e8 	movq	%rcx, -24(%rbp)
     625:	e8 00 00 00 00 	callq	0 <_stack_alloc+0x3a>
     62a:	48 8b 7d e8 	movq	-24(%rbp), %rdi
     62e:	48 89 c6 	movq	%rax, %rsi
     631:	e8 00 00 00 00 	callq	0 <_stack_alloc+0x46>
     636:	e9 c5 ff ff ff 	jmp	-59 <_stack_alloc+0x10>
     63b:	48 83 c4 20 	addq	$32, %rsp
     63f:	5d 	popq	%rbp
     640:	c3 	retq
     641:	66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
     64b:	0f 1f 44 00 00 	nopl	(%rax,%rax)

_stack_pack:
     650:	55 	pushq	%rbp
     651:	48 89 e5 	movq	%rsp, %rbp
     654:	48 83 ec 40 	subq	$64, %rsp
     658:	88 d0 	movb	%dl, %al
     65a:	48 89 7d f8 	movq	%rdi, -8(%rbp)
     65e:	48 89 75 f0 	movq	%rsi, -16(%rbp)
     662:	88 45 ef 	movb	%al, -17(%rbp)
     665:	48 8b 75 f8 	movq	-8(%rbp), %rsi
     669:	48 8b 76 08 	movq	8(%rsi), %rsi
     66d:	48 3b 75 f0 	cmpq	-16(%rbp), %rsi
     671:	0f 93 c0 	setae	%al
     674:	34 ff 	xorb	$-1, %al
     676:	24 01 	andb	$1, %al
     678:	0f b6 d0 	movzbl	%al, %edx
     67b:	48 63 f2 	movslq	%edx, %rsi
     67e:	48 83 fe 00 	cmpq	$0, %rsi
     682:	0f 84 1f 00 00 00 	je	31 <_stack_pack+0x57>
     688:	48 8d 3d 98 05 00 00 	leaq	1432(%rip), %rdi
     68f:	48 8d 35 cc 04 00 00 	leaq	1228(%rip), %rsi
     696:	48 8d 0d 45 05 00 00 	leaq	1349(%rip), %rcx
     69d:	ba 63 00 00 00 	movl	$99, %edx
     6a2:	e8 00 00 00 00 	callq	0 <_stack_pack+0x57>
     6a7:	e9 00 00 00 00 	jmp	0 <_stack_pack+0x5c>
     6ac:	48 8b 45 f0 	movq	-16(%rbp), %rax
     6b0:	48 c1 e0 03 	shlq	$3, %rax
     6b4:	48 89 c7 	movq	%rax, %rdi
     6b7:	e8 00 00 00 00 	callq	0 <_stack_pack+0x6c>
     6bc:	48 89 45 e0 	movq	%rax, -32(%rbp)
     6c0:	48 83 7d e0 00 	cmpq	$0, -32(%rbp)
     6c5:	0f 95 c1 	setne	%cl
     6c8:	80 f1 ff 	xorb	$-1, %cl
     6cb:	80 e1 01 	andb	$1, %cl
     6ce:	0f b6 d1 	movzbl	%cl, %edx
     6d1:	48 63 c2 	movslq	%edx, %rax
     6d4:	48 83 f8 00 	cmpq	$0, %rax
     6d8:	0f 84 1f 00 00 00 	je	31 <_stack_pack+0xad>
     6de:	48 8d 3d 42 05 00 00 	leaq	1346(%rip), %rdi
     6e5:	48 8d 35 76 04 00 00 	leaq	1142(%rip), %rsi
     6ec:	48 8d 0d 3f 05 00 00 	leaq	1343(%rip), %rcx
     6f3:	ba 66 00 00 00 	movl	$102, %edx
     6f8:	e8 00 00 00 00 	callq	0 <_stack_pack+0xad>
     6fd:	e9 00 00 00 00 	jmp	0 <_stack_pack+0xb2>
     702:	48 c7 c1 ff ff ff ff 	movq	$-1, %rcx
     709:	48 8b 45 e0 	movq	-32(%rbp), %rax
     70d:	48 8b 55 f8 	movq	-8(%rbp), %rdx
     711:	48 8b 52 10 	movq	16(%rdx), %rdx
     715:	48 8b 75 f8 	movq	-8(%rbp), %rsi
     719:	48 8b 76 08 	movq	8(%rsi), %rsi
     71d:	48 83 ee 01 	subq	$1, %rsi
     721:	48 2b 75 f0 	subq	-16(%rbp), %rsi
     725:	48 c1 e6 03 	shlq	$3, %rsi
     729:	48 01 f2 	addq	%rsi, %rdx
     72c:	48 8b 75 f0 	movq	-16(%rbp), %rsi
     730:	48 c1 e6 03 	shlq	$3, %rsi
     734:	48 89 c7 	movq	%rax, %rdi
     737:	48 89 75 d0 	movq	%rsi, -48(%rbp)
     73b:	48 89 d6 	movq	%rdx, %rsi
     73e:	48 8b 55 d0 	movq	-48(%rbp), %rdx
     742:	e8 00 00 00 00 	callq	0 <_stack_pack+0xf7>
     747:	48 89 45 c8 	movq	%rax, -56(%rbp)
     74b:	e8 00 00 00 00 	callq	0 <_stack_pack+0x100>
     750:	48 89 45 d8 	movq	%rax, -40(%rbp)
     754:	48 8b 45 e0 	movq	-32(%rbp), %rax
     758:	48 8b 4d d8 	movq	-40(%rbp), %rcx
     75c:	48 89 41 08 	movq	%rax, 8(%rcx)
     760:	48 8b 45 d8 	movq	-40(%rbp), %rax
     764:	c7 00 04 00 00 00 	movl	$4, (%rax)
     76a:	44 8a 45 ef 	movb	-17(%rbp), %r8b
     76e:	48 8b 45 d8 	movq	-40(%rbp), %rax
     772:	44 88 40 04 	movb	%r8b, 4(%rax)
     776:	48 8b 7d f8 	movq	-8(%rbp), %rdi
     77a:	48 8b 75 f0 	movq	-16(%rbp), %rsi
     77e:	e8 00 00 00 00 	callq	0 <_stack_pack+0x133>
     783:	48 8b 7d f8 	movq	-8(%rbp), %rdi
     787:	48 8b 45 d8 	movq	-40(%rbp), %rax
     78b:	48 89 c6 	movq	%rax, %rsi
     78e:	e8 00 00 00 00 	callq	0 <_stack_pack+0x143>
     793:	48 83 c4 40 	addq	$64, %rsp
     797:	5d 	popq	%rbp
     798:	c3 	retq
     799:	0f 1f 80 00 00 00 00 	nopl	(%rax)

_stack_split:
     7a0:	55 	pushq	%rbp
     7a1:	48 89 e5 	movq	%rsp, %rbp
     7a4:	48 83 ec 20 	subq	$32, %rsp
     7a8:	48 89 7d f8 	movq	%rdi, -8(%rbp)
     7ac:	48 89 75 f0 	movq	%rsi, -16(%rbp)
     7b0:	48 8b 7d f8 	movq	-8(%rbp), %rdi
     7b4:	e8 00 00 00 00 	callq	0 <_stack_split+0x19>
     7b9:	48 89 45 e8 	movq	%rax, -24(%rbp)
     7bd:	48 c7 45 e0 00 00 00 00 	movq	$0, -32(%rbp)
     7c5:	48 8b 45 e0 	movq	-32(%rbp), %rax
     7c9:	48 3b 45 f0 	cmpq	-16(%rbp), %rax
     7cd:	0f 83 2a 00 00 00 	jae	42 <_stack_split+0x5d>
     7d3:	48 8b 7d f8 	movq	-8(%rbp), %rdi
     7d7:	48 8b 45 e8 	movq	-24(%rbp), %rax
     7db:	48 8b 40 08 	movq	8(%rax), %rax
     7df:	48 8b 4d e0 	movq	-32(%rbp), %rcx
     7e3:	48 8b 34 c8 	movq	(%rax,%rcx,8), %rsi
     7e7:	e8 00 00 00 00 	callq	0 <_stack_split+0x4c>
     7ec:	48 8b 45 e0 	movq	-32(%rbp), %rax
     7f0:	48 83 c0 01 	addq	$1, %rax
     7f4:	48 89 45 e0 	movq	%rax, -32(%rbp)
     7f8:	e9 c8 ff ff ff 	jmp	-56 <_stack_split+0x25>
     7fd:	48 83 c4 20 	addq	$32, %rsp
     801:	5d 	popq	%rbp
     802:	c3 	retq
     803:	66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
     80d:	0f 1f 00 	nopl	(%rax)

_unwind:
     810:	55 	pushq	%rbp
     811:	48 89 e5 	movq	%rsp, %rbp
     814:	48 83 ec 40 	subq	$64, %rsp
     818:	48 89 7d f8 	movq	%rdi, -8(%rbp)
     81c:	31 c0 	xorl	%eax, %eax
     81e:	89 c6 	movl	%eax, %esi
     820:	48 8b 7d f8 	movq	-8(%rbp), %rdi
     824:	e8 00 00 00 00 	callq	0 <_unwind+0x19>
     829:	48 89 45 f0 	movq	%rax, -16(%rbp)
     82d:	48 8b 45 f0 	movq	-16(%rbp), %rax
     831:	83 38 00 	cmpl	$0, (%rax)
     834:	0f 85 1e 00 00 00 	jne	30 <_unwind+0x48>
     83a:	48 8b 45 f0 	movq	-16(%rbp), %rax
     83e:	48 89 45 e8 	movq	%rax, -24(%rbp)
     842:	48 8b 7d f8 	movq	-8(%rbp), %rdi
     846:	48 8b 45 e8 	movq	-24(%rbp), %rax
     84a:	48 8b 70 08 	movq	8(%rax), %rsi
     84e:	e8 00 00 00 00 	callq	0 <_unwind+0x43>
     853:	e9 25 01 00 00 	jmp	293 <_unwind+0x16d>
     858:	48 8b 45 f0 	movq	-16(%rbp), %rax
     85c:	83 38 02 	cmpl	$2, (%rax)
     85f:	0f 85 d1 00 00 00 	jne	209 <_unwind+0x126>
     865:	48 8b 45 f0 	movq	-16(%rbp), %rax
     869:	48 89 45 e0 	movq	%rax, -32(%rbp)
     86d:	48 8b 45 f8 	movq	-8(%rbp), %rax
     871:	48 8b 40 08 	movq	8(%rax), %rax
     875:	48 8b 4d e0 	movq	-32(%rbp), %rcx
     879:	48 63 49 04 	movslq	4(%rcx), %rcx
     87d:	48 39 c8 	cmpq	%rcx, %rax
     880:	0f 97 c2 	seta	%dl
     883:	80 f2 ff 	xorb	$-1, %dl
     886:	80 e2 01 	andb	$1, %dl
     889:	0f b6 f2 	movzbl	%dl, %esi
     88c:	48 63 c6 	movslq	%esi, %rax
     88f:	48 83 f8 00 	cmpq	$0, %rax
     893:	0f 84 1f 00 00 00 	je	31 <_unwind+0xa8>
     899:	48 8d 3d 9f 03 00 00 	leaq	927(%rip), %rdi
     8a0:	48 8d 35 bb 02 00 00 	leaq	699(%rip), %rsi
     8a7:	48 8d 0d 98 03 00 00 	leaq	920(%rip), %rcx
     8ae:	ba 82 00 00 00 	movl	$130, %edx
     8b3:	e8 00 00 00 00 	callq	0 <_unwind+0xa8>
     8b8:	e9 00 00 00 00 	jmp	0 <_unwind+0xad>
     8bd:	48 c7 45 d8 01 00 00 00 	movq	$1, -40(%rbp)
     8c5:	48 8b 45 d8 	movq	-40(%rbp), %rax
     8c9:	48 8b 4d e0 	movq	-32(%rbp), %rcx
     8cd:	48 63 49 04 	movslq	4(%rcx), %rcx
     8d1:	48 39 c8 	cmpq	%rcx, %rax
     8d4:	0f 87 49 00 00 00 	ja	73 <_unwind+0x113>
     8da:	48 8b 45 f8 	movq	-8(%rbp), %rax
     8de:	48 8b 40 10 	movq	16(%rax), %rax
     8e2:	48 8b 4d f8 	movq	-8(%rbp), %rcx
     8e6:	48 8b 49 08 	movq	8(%rcx), %rcx
     8ea:	48 2b 4d d8 	subq	-40(%rbp), %rcx
     8ee:	48 83 e9 01 	subq	$1, %rcx
     8f2:	48 8b 04 c8 	movq	(%rax,%rcx,8), %rax
     8f6:	48 8b 40 10 	movq	16(%rax), %rax
     8fa:	48 8b 4d f8 	movq	-8(%rbp), %rcx
     8fe:	48 8b 49 10 	movq	16(%rcx), %rcx
     902:	48 8b 55 f8 	movq	-8(%rbp), %rdx
     906:	48 8b 52 08 	movq	8(%rdx), %rdx
     90a:	48 2b 55 d8 	subq	-40(%rbp), %rdx
     90e:	48 89 04 d1 	movq	%rax, (%rcx,%rdx,8)
     912:	48 8b 45 d8 	movq	-40(%rbp), %rax
     916:	48 83 c0 01 	addq	$1, %rax
     91a:	48 89 45 d8 	movq	%rax, -40(%rbp)
     91e:	e9 a2 ff ff ff 	jmp	-94 <_unwind+0xb5>
     923:	48 8b 45 e0 	movq	-32(%rbp), %rax
     927:	48 8b 40 08 	movq	8(%rax), %rax
     92b:	48 8b 7d f8 	movq	-8(%rbp), %rdi
     92f:	ff d0 	callq	*%rax
     931:	e9 42 00 00 00 	jmp	66 <_unwind+0x168>
     936:	48 8b 45 f0 	movq	-16(%rbp), %rax
     93a:	83 38 03 	cmpl	$3, (%rax)
     93d:	0f 85 2b 00 00 00 	jne	43 <_unwind+0x15e>
     943:	48 8b 45 f0 	movq	-16(%rbp), %rax
     947:	48 89 45 d0 	movq	%rax, -48(%rbp)
     94b:	48 8b 7d f8 	movq	-8(%rbp), %rdi
     94f:	e8 00 00 00 00 	callq	0 <_unwind+0x144>
     954:	48 8b 7d f8 	movq	-8(%rbp), %rdi
     958:	48 8b 4d d0 	movq	-48(%rbp), %rcx
     95c:	48 8b 71 08 	movq	8(%rcx), %rsi
     960:	48 89 45 c8 	movq	%rax, -56(%rbp)
     964:	e8 00 00 00 00 	callq	0 <_unwind+0x159>
     969:	e9 05 00 00 00 	jmp	5 <_unwind+0x163>
     96e:	e9 0f 00 00 00 	jmp	15 <_unwind+0x172>
     973:	e9 00 00 00 00 	jmp	0 <_unwind+0x168>
     978:	e9 00 00 00 00 	jmp	0 <_unwind+0x16d>
     97d:	e9 9a fe ff ff 	jmp	-358 <_unwind+0xc>
     982:	48 83 c4 40 	addq	$64, %rsp
     986:	5d 	popq	%rbp
     987:	c3 	retq
     988:	0f 1f 84 00 00 00 00 00 	nopl	(%rax,%rax)

_eval:
     990:	55 	pushq	%rbp
     991:	48 89 e5 	movq	%rsp, %rbp
     994:	48 83 ec 30 	subq	$48, %rsp
     998:	48 89 7d f8 	movq	%rdi, -8(%rbp)
     99c:	48 8d 7d e0 	leaq	-32(%rbp), %rdi
     9a0:	e8 00 00 00 00 	callq	0 <_eval+0x15>
     9a5:	48 8b 75 f8 	movq	-8(%rbp), %rsi
     9a9:	48 8d 7d e0 	leaq	-32(%rbp), %rdi
     9ad:	e8 00 00 00 00 	callq	0 <_eval+0x22>
     9b2:	48 8d 7d e0 	leaq	-32(%rbp), %rdi
     9b6:	e8 00 00 00 00 	callq	0 <_eval+0x2b>
     9bb:	48 8d 7d e0 	leaq	-32(%rbp), %rdi
     9bf:	e8 00 00 00 00 	callq	0 <_eval+0x34>
     9c4:	48 89 45 d8 	movq	%rax, -40(%rbp)
     9c8:	48 8d 7d e0 	leaq	-32(%rbp), %rdi
     9cc:	e8 00 00 00 00 	callq	0 <_eval+0x41>
     9d1:	48 8b 45 d8 	movq	-40(%rbp), %rax
     9d5:	48 83 c4 30 	addq	$48, %rsp
     9d9:	5d 	popq	%rbp
     9da:	c3 	retq
     9db:	0f 1f 44 00 00 	nopl	(%rax,%rax)

_print_node:
     9e0:	55 	pushq	%rbp
     9e1:	48 89 e5 	movq	%rsp, %rbp
     9e4:	48 83 ec 30 	subq	$48, %rsp
     9e8:	48 89 7d f8 	movq	%rdi, -8(%rbp)
     9ec:	48 8b 7d f8 	movq	-8(%rbp), %rdi
     9f0:	83 3f 00 	cmpl	$0, (%rdi)
     9f3:	0f 85 34 00 00 00 	jne	52 <_print_node+0x4d>
     9f9:	48 8b 45 f8 	movq	-8(%rbp), %rax
     9fd:	48 89 45 f0 	movq	%rax, -16(%rbp)
     a01:	48 8b 45 f0 	movq	-16(%rbp), %rax
     a05:	48 8b 78 08 	movq	8(%rax), %rdi
     a09:	e8 d2 ff ff ff 	callq	-46 <_print_node>
     a0e:	bf 20 00 00 00 	movl	$32, %edi
     a13:	e8 00 00 00 00 	callq	0 <_print_node+0x38>
     a18:	48 8b 4d f0 	movq	-16(%rbp), %rcx
     a1c:	48 8b 79 10 	movq	16(%rcx), %rdi
     a20:	89 45 dc 	movl	%eax, -36(%rbp)
     a23:	e8 b8 ff ff ff 	callq	-72 <_print_node>
     a28:	e9 b6 00 00 00 	jmp	182 <_print_node+0x103>
     a2d:	48 8b 45 f8 	movq	-8(%rbp), %rax
     a31:	83 38 04 	cmpl	$4, (%rax)
     a34:	0f 85 16 00 00 00 	jne	22 <_print_node+0x70>
     a3a:	48 8d 3d 19 02 00 00 	leaq	537(%rip), %rdi
     a41:	b0 00 	movb	$0, %al
     a43:	e8 00 00 00 00 	callq	0 <_print_node+0x68>
     a48:	89 45 d8 	movl	%eax, -40(%rbp)
     a4b:	e9 8e 00 00 00 	jmp	142 <_print_node+0xfe>
     a50:	48 8b 45 f8 	movq	-8(%rbp), %rax
     a54:	83 38 02 	cmpl	$2, (%rax)
     a57:	0f 85 26 00 00 00 	jne	38 <_print_node+0xa3>
     a5d:	48 8b 45 f8 	movq	-8(%rbp), %rax
     a61:	48 89 45 e8 	movq	%rax, -24(%rbp)
     a65:	48 8b 45 e8 	movq	-24(%rbp), %rax
     a69:	48 8b 70 08 	movq	8(%rax), %rsi
     a6d:	48 8d 3d ef 01 00 00 	leaq	495(%rip), %rdi
     a74:	b0 00 	movb	$0, %al
     a76:	e8 00 00 00 00 	callq	0 <_print_node+0x9b>
     a7b:	89 45 d4 	movl	%eax, -44(%rbp)
     a7e:	e9 56 00 00 00 	jmp	86 <_print_node+0xf9>
     a83:	48 8b 45 f8 	movq	-8(%rbp), %rax
     a87:	83 38 03 	cmpl	$3, (%rax)
     a8a:	0f 85 12 00 00 00 	jne	18 <_print_node+0xc2>
     a90:	48 8b 45 f8 	movq	-8(%rbp), %rax
     a94:	48 8b 78 08 	movq	8(%rax), %rdi
     a98:	e8 43 ff ff ff 	callq	-189 <_print_node>
     a9d:	e9 32 00 00 00 	jmp	50 <_print_node+0xf4>
     aa2:	48 8b 45 f8 	movq	-8(%rbp), %rax
     aa6:	83 38 01 	cmpl	$1, (%rax)
     aa9:	0f 85 20 00 00 00 	jne	32 <_print_node+0xef>
     aaf:	48 8b 45 f8 	movq	-8(%rbp), %rax
     ab3:	48 89 45 e0 	movq	%rax, -32(%rbp)
     ab7:	48 8b 45 e0 	movq	-32(%rbp), %rax
     abb:	8b 70 04 	movl	4(%rax), %esi
     abe:	48 8d 3d ab 01 00 00 	leaq	427(%rip), %rdi
     ac5:	b0 00 	movb	$0, %al
     ac7:	e8 00 00 00 00 	callq	0 <_print_node+0xec>
     acc:	89 45 d0 	movl	%eax, -48(%rbp)
     acf:	e9 00 00 00 00 	jmp	0 <_print_node+0xf4>
     ad4:	e9 00 00 00 00 	jmp	0 <_print_node+0xf9>
     ad9:	e9 00 00 00 00 	jmp	0 <_print_node+0xfe>
     ade:	e9 00 00 00 00 	jmp	0 <_print_node+0x103>
     ae3:	48 83 c4 30 	addq	$48, %rsp
     ae7:	5d 	popq	%rbp
     ae8:	c3 	retq
     ae9:	0f 1f 80 00 00 00 00 	nopl	(%rax)

_main:
     af0:	55 	pushq	%rbp
     af1:	48 89 e5 	movq	%rsp, %rbp
     af4:	48 83 ec 30 	subq	$48, %rsp
     af8:	48 8b 05 00 00 00 00 	movq	(%rip), %rax
     aff:	31 c9 	xorl	%ecx, %ecx
     b01:	89 7d fc 	movl	%edi, -4(%rbp)
     b04:	48 89 75 f0 	movq	%rsi, -16(%rbp)
     b08:	48 89 c7 	movq	%rax, %rdi
     b0b:	89 ce 	movl	%ecx, %esi
     b0d:	e8 00 00 00 00 	callq	0 <_main+0x22>
     b12:	48 89 45 e8 	movq	%rax, -24(%rbp)
     b16:	48 8b 45 e8 	movq	-24(%rbp), %rax
     b1a:	48 89 c7 	movq	%rax, %rdi
     b1d:	e8 00 00 00 00 	callq	0 <_main+0x32>
     b22:	48 89 45 e0 	movq	%rax, -32(%rbp)
     b26:	48 8d 3d 46 01 00 00 	leaq	326(%rip), %rdi
     b2d:	b0 00 	movb	$0, %al
     b2f:	e8 00 00 00 00 	callq	0 <_main+0x44>
     b34:	48 8b 7d e0 	movq	-32(%rbp), %rdi
     b38:	89 45 dc 	movl	%eax, -36(%rbp)
     b3b:	e8 00 00 00 00 	callq	0 <_main+0x50>
     b40:	bf 0a 00 00 00 	movl	$10, %edi
     b45:	e8 00 00 00 00 	callq	0 <_main+0x5a>
     b4a:	31 c9 	xorl	%ecx, %ecx
     b4c:	89 45 d8 	movl	%eax, -40(%rbp)
     b4f:	89 c8 	movl	%ecx, %eax
     b51:	48 83 c4 30 	addq	$48, %rsp
     b55:	5d 	popq	%rbp
     b56:	c3 	retq
